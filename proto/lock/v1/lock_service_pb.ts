// @generated by protoc-gen-es v1.1.1 with parameter "target=ts"
// @generated from file v1/lock_service.proto (package lock.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message lock.v1.GetLockStateRequest
 */
export class GetLockStateRequest extends Message<GetLockStateRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetLockStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "lock.v1.GetLockStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockStateRequest {
    return new GetLockStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockStateRequest {
    return new GetLockStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockStateRequest {
    return new GetLockStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockStateRequest | PlainMessage<GetLockStateRequest> | undefined, b: GetLockStateRequest | PlainMessage<GetLockStateRequest> | undefined): boolean {
    return proto3.util.equals(GetLockStateRequest, a, b);
  }
}

/**
 * @generated from message lock.v1.GetLockStateResponse
 */
export class GetLockStateResponse extends Message<GetLockStateResponse> {
  /**
   * @generated from field: bool engaged = 1;
   */
  engaged = false;

  constructor(data?: PartialMessage<GetLockStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "lock.v1.GetLockStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "engaged", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLockStateResponse {
    return new GetLockStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLockStateResponse {
    return new GetLockStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLockStateResponse {
    return new GetLockStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLockStateResponse | PlainMessage<GetLockStateResponse> | undefined, b: GetLockStateResponse | PlainMessage<GetLockStateResponse> | undefined): boolean {
    return proto3.util.equals(GetLockStateResponse, a, b);
  }
}

/**
 * @generated from message lock.v1.SetLockStateRequest
 */
export class SetLockStateRequest extends Message<SetLockStateRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: bool engaged = 2;
   */
  engaged = false;

  constructor(data?: PartialMessage<SetLockStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "lock.v1.SetLockStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "engaged", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLockStateRequest {
    return new SetLockStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLockStateRequest {
    return new SetLockStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLockStateRequest {
    return new SetLockStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetLockStateRequest | PlainMessage<SetLockStateRequest> | undefined, b: SetLockStateRequest | PlainMessage<SetLockStateRequest> | undefined): boolean {
    return proto3.util.equals(SetLockStateRequest, a, b);
  }
}

/**
 * @generated from message lock.v1.SetLockStateResponse
 */
export class SetLockStateResponse extends Message<SetLockStateResponse> {
  /**
   * @generated from field: bool engaged = 1;
   */
  engaged = false;

  constructor(data?: PartialMessage<SetLockStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "lock.v1.SetLockStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "engaged", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLockStateResponse {
    return new SetLockStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLockStateResponse {
    return new SetLockStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLockStateResponse {
    return new SetLockStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetLockStateResponse | PlainMessage<SetLockStateResponse> | undefined, b: SetLockStateResponse | PlainMessage<SetLockStateResponse> | undefined): boolean {
    return proto3.util.equals(SetLockStateResponse, a, b);
  }
}

